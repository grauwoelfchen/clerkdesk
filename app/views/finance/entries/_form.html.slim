- content_for :script do
  = javascript_include_tag 'src/finance/entries'

.attrs style="height:0;width:0;opacity:0;"
  span#report data-id=@report.id
  span#account_book data-id=@account_book.id

= form_for [:finance, report, account_book, entry], html: {class: 'ui form'} do |f|
  - if entry.errors.any?
    = render 'shared/error', resource: entry
  fieldset
    legend Entry
    .field
      = f.label :title
      = f.text_field :title, placeholder: 'Title'
    .fields
      .seven.wide.field
        = f.label :type
        = f.select :type, Finance::Entry.human_types.invert, {}, class: 'ui dropdown'
      .nine.wide.field
        - journalizings = entry.journalizing_id ? [['', entry.journalizing_id]] : []
        = f.label :journalizing_id, Finance::Category.model_name.human
        = f.select :journalizing_id, journalizings, {prompt: '---'}, class: 'ui dropdown'
    .field
      = f.label :total_amount
      = f.text_field :total_amount, class: 'currency', placeholder: ''
  fieldset
    legend Additional Information
    .field
      = f.label :memo
      = f.text_area :memo, rows: 3, placeholder: 'Memo'
    .field
      = f.label :people
      - labels = account_book_entry_people_labels(entry).join(',')
      = text_field_tag :labels, labels, id: 'labels', placeholder: 'Person'
      #people
        - entry.involvements.each do |involvement|
          - if involvement.holder_type == 'Person'
            div.holder
              = f.hidden_field :people, id: "holder_#{involvement.holder_id}",      value: involvement.holder_id, name: 'entry[involvements_attributes][][holder_id]'
              = f.hidden_field :people, id: "holder_#{involvement.holder_id}_type", value: 'Person',              name: 'entry[involvements_attributes][][holder_type]'
              - if involvement.persisted?
                = f.hidden_field :people, id: "holder_#{involvement.holder_id}_id",      value: involvement.id, class: 'id',      name: 'entry[involvements_attributes][][id]'
                = f.hidden_field :people, id: "holder_#{involvement.holder_id}_destroy", value: '0',            class: 'destroy', name: 'entry[involvements_attributes][][_destroy]'
    .actions
      - action = entry.persisted? ? 'update' : 'create'
      = f.submit t("action.#{action}"), class: 'ui submit button'
      - if action == 'update'
        = link_to t('action.destroy'), finance_report_account_book_entry_path(report, account_book, entry), class: 'ui button negative', data: {method: :delete, confirm: 'Are you sure?'}
